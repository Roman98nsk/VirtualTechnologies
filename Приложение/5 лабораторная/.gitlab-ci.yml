build:       # This job runs in the build stage, which runs first.
  # stage - описывает последовательное выполнение заданий.
  stage: build
  # image - Использует образы Docker.
  image: docker:latest
  # services - Используйте образы сервисов Docker.
  services:
    - docker:dind
  variables:
    tag: $CI_COMMIT_SHA
  # before_script - Переопределяет набор команд, которые 
  #  выполняются перед заданием. 
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # script - Сценарий оболочки, который выполняется бегуном.
  # echo - комментарии для пользователя
  # CI_COMMIT_BRANCH - Имя ветки коммита. Доступно в ответвлениях 
  # конвейеров, включая конвейеры для ответвления по умолчанию. 
  # Недоступно в конвейерах запросов на слияние или конвейерах 
  # тегов.
  # CI_DEFAULT_BRANCH - Имя ветки проекта по умолчанию
  # CI_COMMIT_REF_SLUG - Имя ветки или тега, для которого создается 
  # проект. в нижнем регистре, сокращено до 63 байт, и все, 
  # кроме 0-9и a-zзаменено на -. Без ведущего/конечного -. 
  # Используйте в URL-адресах, именах хостов и доменных именах.
  script:
  #   - |
  #     if [[ "$CI_COMMIT_TAG"]]; then
  #       tag=$CI_COMMIT_TAG
  #     fi
    - docker build -f server/Dockerfile -t $CI_REGISTRY_IMAGE:$tag .
    - docker push "$CI_REGISTRY_IMAGE:$tag"
    - docker rmi "$CI_REGISTRY_IMAGE:$tag"
  #  Используйте ключевое слово rules, чтобы указать, 
  # когда запускать или пропускать задания.
  rules:
    - if: $CI_COMMIT_TAG
      when: always
      variables:
        tag: $CI_COMMIT_TAG
    - when: manual



